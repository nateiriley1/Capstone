
Homework 2 

Hernand Gonzalez

Problem 1
(a): The reason we needed to use CALL was becuase we needed to remeber to store the location of where
the data will return, if we had useed JMP it would have just jumped to the location and not have known
to return to that memmory location.

(b): For the calling convention for the example in problem one I can see that the progrma jumps to 
the bottom since JMP calls start, from there values are loaded into registers and then multiply is called so that 
the values in R1 and R2 are still stored in memmory. When the multiply function is called there is no RET implemented
so the program then moves to loop since it goes line by line unless otherwise using calling convention.

(c): One main problem that I think could be a major problem with calling is this calling convention is that
the order in which you order your intructions can change the outcome that you were looking for. 








Problem 2
(a): x = a/b if b != 0 else 0

    if b != 0:
        x = a/b
    else:
        return 0

(b): result = pow(x, y if y > 0 else 0)

    if y > 0 :
        result = pow(x,y)
    else :
        return 0

(c): state = "ice" if temp <= 32 else "water" if temp <= 100 else "vapor"

    state = int(input('What is the temperature? '))
        if temperature <= 32:
            print('ice')
        elif temperature <= 100:
            print('vapor')
        print('water')

(d): truncatedPower = pow(x, y if abs(y) <= 10 else 10 * (-1 if y < 0 else 1))

    x = int(input)
    y = int(input)
    if abs(y) <= 10 :
        pow(x,y)
        else :
        return 10
        if y < 0:
            return -1
        else:
            return 1

        


Problem 3:
(a):

    while x >= 1 && x <= 100 :
        while y >= 1 && <= 100:
            print str(x) +  "/" + str(y)

(b):

    while true:
        z = 0
        x = range(1,100)
        y = range(1,100)
        if  z <= 10 :
            print str(x) + "/" + str(y)
            break
            z++

        

